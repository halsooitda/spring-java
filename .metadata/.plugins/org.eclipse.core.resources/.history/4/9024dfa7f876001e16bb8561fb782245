package com.myweb.www.security;

import java.io.IOException;

import javax.inject.Inject;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.security.core.Authentication;
import org.springframework.security.web.DefaultRedirectStrategy;
import org.springframework.security.web.RedirectStrategy;
import org.springframework.security.web.authentication.AuthenticationSuccessHandler;
import org.springframework.security.web.savedrequest.HttpSessionRequestCache;
import org.springframework.security.web.savedrequest.RequestCache;
import org.springframework.stereotype.Component;

import com.myweb.www.service.MemberService;

import lombok.Getter;
import lombok.Setter;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Component
public class LoginSuccessHandler implements AuthenticationSuccessHandler {
	
	@Setter
	@Getter
	private String authEmail;
	
	@Setter
	@Getter
	private String authUrl; //가야할 경로
	
	//redirect로 데이터를 가져가는 역할 (리다이렉트 스트레터지)
	private RedirectStrategy rdstg = new DefaultRedirectStrategy(); //reqCache를 rdstg얘가 달고 감 rdp와 비슷함 requestDispatcher
	//실제 내가 로그인한 정보와 가야하는 경로 등을 저장
	private RequestCache reqCache = new HttpSessionRequestCache(); 
	
	@Inject
	private MemberService msv;
	
	//해당 권한이 있다고 생각했을 때의 내용
	@Override
	public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response,
			Authentication authentication) throws IOException, ServletException {
		
		
	}

}











